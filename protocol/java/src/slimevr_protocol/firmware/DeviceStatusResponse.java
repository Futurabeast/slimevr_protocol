// automatically generated by the FlatBuffers compiler, do not modify

package slimevr_protocol.firmware;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class DeviceStatusResponse extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static DeviceStatusResponse getRootAsDeviceStatusResponse(ByteBuffer _bb) { return getRootAsDeviceStatusResponse(_bb, new DeviceStatusResponse()); }
  public static DeviceStatusResponse getRootAsDeviceStatusResponse(ByteBuffer _bb, DeviceStatusResponse obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public DeviceStatusResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long rssi() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public slimevr_protocol.hardware_info.ImuStatus imuStatus(int j) { return imuStatus(new slimevr_protocol.hardware_info.ImuStatus(), j); }
  public slimevr_protocol.hardware_info.ImuStatus imuStatus(slimevr_protocol.hardware_info.ImuStatus obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int imuStatusLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public slimevr_protocol.hardware_info.ImuStatus.Vector imuStatusVector() { return imuStatusVector(new slimevr_protocol.hardware_info.ImuStatus.Vector()); }
  public slimevr_protocol.hardware_info.ImuStatus.Vector imuStatusVector(slimevr_protocol.hardware_info.ImuStatus.Vector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public slimevr_protocol.hardware_info.McuStatus mcuStatus() { return mcuStatus(new slimevr_protocol.hardware_info.McuStatus()); }
  public slimevr_protocol.hardware_info.McuStatus mcuStatus(slimevr_protocol.hardware_info.McuStatus obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public float batteryVoltage() { int o = __offset(10); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float batteryPctEstimate() { int o = __offset(12); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }

  public static int createDeviceStatusResponse(FlatBufferBuilder builder,
      long rssi,
      int imuStatusOffset,
      int mcuStatusOffset,
      float batteryVoltage,
      float batteryPctEstimate) {
    builder.startTable(5);
    DeviceStatusResponse.addRssi(builder, rssi);
    DeviceStatusResponse.addBatteryPctEstimate(builder, batteryPctEstimate);
    DeviceStatusResponse.addBatteryVoltage(builder, batteryVoltage);
    DeviceStatusResponse.addMcuStatus(builder, mcuStatusOffset);
    DeviceStatusResponse.addImuStatus(builder, imuStatusOffset);
    return DeviceStatusResponse.endDeviceStatusResponse(builder);
  }

  public static void startDeviceStatusResponse(FlatBufferBuilder builder) { builder.startTable(5); }
  public static void addRssi(FlatBufferBuilder builder, long rssi) { builder.addLong(0, rssi, 0L); }
  public static void addImuStatus(FlatBufferBuilder builder, int imuStatusOffset) { builder.addOffset(1, imuStatusOffset, 0); }
  public static int createImuStatusVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startImuStatusVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addMcuStatus(FlatBufferBuilder builder, int mcuStatusOffset) { builder.addOffset(2, mcuStatusOffset, 0); }
  public static void addBatteryVoltage(FlatBufferBuilder builder, float batteryVoltage) { builder.addFloat(3, batteryVoltage, 0.0f); }
  public static void addBatteryPctEstimate(FlatBufferBuilder builder, float batteryPctEstimate) { builder.addFloat(4, batteryPctEstimate, 0.0f); }
  public static int endDeviceStatusResponse(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public DeviceStatusResponse get(int j) { return get(new DeviceStatusResponse(), j); }
    public DeviceStatusResponse get(DeviceStatusResponse obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

